// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package featurestores

import (
	"sync"
)

// Ensure, that HttpClientMock does implement HttpClient.
// If this is not the case, regenerate this file with moq.
var _ HttpClient = &HttpClientMock{}

// HttpClientMock is a mock implementation of HttpClient.
//
// 	func TestSomethingThatUsesHttpClient(t *testing.T) {
//
// 		// make and configure a mocked HttpClient
// 		mockedHttpClient := &HttpClientMock{
// 			GetFunc: func(s string) ([]byte, error) {
// 				panic("mock out the Get method")
// 			},
// 		}
//
// 		// use mockedHttpClient in code that requires HttpClient
// 		// and then make assertions.
//
// 	}
type HttpClientMock struct {
	// GetFunc mocks the Get method.
	GetFunc func(s string) ([]byte, error)

	// calls tracks calls to the methods.
	calls struct {
		// Get holds details about calls to the Get method.
		Get []struct {
			// S is the s argument value.
			S string
		}
	}
	lockGet sync.RWMutex
}

// Get calls GetFunc.
func (mock *HttpClientMock) Get(s string) ([]byte, error) {
	if mock.GetFunc == nil {
		panic("HttpClientMock.GetFunc: method is nil but HttpClient.Get was just called")
	}
	callInfo := struct {
		S string
	}{
		S: s,
	}
	mock.lockGet.Lock()
	mock.calls.Get = append(mock.calls.Get, callInfo)
	mock.lockGet.Unlock()
	return mock.GetFunc(s)
}

// GetCalls gets all the calls that were made to Get.
// Check the length with:
//     len(mockedHttpClient.GetCalls())
func (mock *HttpClientMock) GetCalls() []struct {
	S string
} {
	var calls []struct {
		S string
	}
	mock.lockGet.RLock()
	calls = mock.calls.Get
	mock.lockGet.RUnlock()
	return calls
}
